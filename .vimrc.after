" Color scheme
colorscheme jellybeans+
let g:solarized_termcolors=256
set colorcolumn=120

" CtrlP configuration
set wildignore+=*/tmp/*,*/spec/fixtures/cassettes/*,*/app/assets/images/*,*/public/*

" Strip trailing whitespace
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" custom status line
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Syntax highlighting for deface/jbuilder files
au BufNewFile,BufRead *.erb.deface set filetype=eruby
au BufNewFile,BufRead *.json.jbuilder set filetype=ruby

" Set up vim-test
nmap <silent> <leader>r :TestFile<CR>
nmap <silent> <leader>R :TestNearest<CR>
let g:test#strategy = 'vimux'

" Run specs in split screen
let g:vroom_use_vimux = 1
let g:VimuxOrientation = 'h'
if (&columns > 200)
  let g:VimuxHeight = 30
else
  let g:VimuxHeight = 50
endif

" Use ctrl + s to save
noremap <silent> <C-S>          :update<CR>
vnoremap <silent> <C-S>         <C-C>:update<CR><Esc>
inoremap <silent> <C-S>         <C-O>:update<CR><Esc>

" Use ctrl + q to close
noremap <silent> <C-Q>          :q<CR>

" Auto-save and push notes file
autocmd BufWritePost * execute ':silent ! if [[ % == *.dotfiles/notes.md ]]; then gitdir=$(dirname %)/.git; worktree=$(dirname %); git --git-dir=$gitdir --work-tree=$worktree add % ; git --git-dir=$gitdir --work-tree=$worktree commit -m "Update notes.md"; git --git-dir=$gitdir --work-tree=$worktree push; fi > /dev/null 2>&1'

" Disable SCSS linting (too slow and often wrong)
let g:syntastic_scss_checkers=[]

" Move from diff to Gstatus view and stage file by pressing - twice
noremap <silent> - <C-w>k

" indent private methods
let g:ruby_indent_access_modifier_style="indent"

" Disable javascript snippets in html
let g:snipMate.scope_aliases['html'] = ''

" Use coffelint options if present
let coffee_lint_options = '-f .coffeelint.json'

"
set clipboard=unnamed

" Create window splits easier. The default
" way is Ctrl-w,v and Ctrl-w,s. I remap
" this to vv and ss
nnoremap <silent> vv <C-w>v
nnoremap <silent> ss <C-w>s

" The cursor mode for inser
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" Check spelling by default
set spelllang=en
setlocal spell spelllang=en_us

"Vim 80 column layout concerns
"
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/

"see full path of the current file?
set statusline+=%F

" map '' to vi"
nnoremap <silent> '' vi"

" vim-airline theme
let g:airline_solarized_bg='angr'

" Git Support customizations
" Git status
noremap <silent> <leader>gs :Gstatus<CR>
noremap <silent> <leader>gd :Gdiff<CR>
noremap <silent> <leader>gc :Gcommit<CR>
noremap <silent> <leader>gp :Git push<CR>

" Show hidden files in Nerd Tree
let NERDTreeShowHidden=1

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" bind \nf to reveal in nerdtree
nnoremap \nf :NERDTreeFind<CR>

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
nnoremap \ :Ag<SPACE>
